pipeline {
    agent any

    environment {
        CI = 'true'
        JVM_OPTS = '-Dfile.encoding=UTF-8'
    }

    stages {
        stage('Node Setup') {
            steps {
                script {
                    // Install NVM
                    sh '''
                        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
                        export NVM_DIR="$HOME/.nvm"
                        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
                    '''
                }
            }
        }

        stage('Install and Test') {
            steps {
                script {
                    // Use a custom script to load NVM and execute commands
                    def customScript = '''
                        export NVM_DIR="$HOME/.nvm"
                        [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
                        nvm install 14.17.1
                        node --version
                        npm --version
                        export JVM_OPTS="-Dfile.encoding=UTF-8"
                        npm install mochawesome
                        npx cypress run
                        npx mochawesome
                    '''
                    sh customScript
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded! Do something here...'

            // Add the following lines to publish the Mochawesome report
            publishHTML([allowMissing: false, alwaysLinkToLastBuild: true, keepAll: true, reportDir: 'mochawesome-report', reportFiles: 'mochawesome.html', reportName: 'Mochawesome Report'])
        }
        failure {
            echo 'Pipeline failed! Do something here...'
        }
    }
}
